mixin diagram(options)
  - const { declination, dataArray } = options;
  - let dataArrayAttributes = {};
  - let declinationAttributes = {};

  -  dataArray.forEach((item, i) => { 
  -    dataArrayAttributes[`data-${item.name}`] = `${item.value}`;
  -  })
  -  declinationAttributes['data-declination'] = declination;

  .diagram.js-diagram&attributes(dataArrayAttributes)
    .diagram__block
      svg.diagram__chart.js-diagram__chart(width="120" height="120" viewBox="0 0 120 120")
        each item in dataArray 
          linearGradient(id=`${item.name}` x1="0" x2="0" y1="0" y2="1")
            stop(offset="0%" stop-color=`${item.gradientColors[0]}`)
            stop(offset="100%" stop-color=`${item.gradientColors[1]}`)
      h1.diagram__total.js-diagram__total&attributes(declinationAttributes)
    .diagram__legend
      ul.diagram__list
        each item in dataArray 
          li.diagram__list-item
            .diagram__point(style=`background: linear-gradient(180deg, ${item.gradientColors[0]} 0%, ${item.gradientColors[1]} 100%);`)
            .diagram__text= item.sign
